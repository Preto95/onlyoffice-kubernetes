apiVersion: apps/v1
kind: Deployment
metadata:    
  labels:
    io.kompose.service: onlyoffice-documentserver
  name: onlyoffice-documentserver
  namespace: onlyoffice  
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: onlyoffice-documentserver
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: onlyoffice-documentserver
    spec:
      containers:
      - env:
        - name: AMQP_URI
          value: amqp://guest:guest@onlyoffice-rabbitmq
        - name: DB_HOST
          value: onlyoffice-postgresql
        - name: DB_NAME
          value: onlyoffice
        - name: DB_PORT
          value: "5432"
        - name: DB_TYPE
          value: postgres
        - name: DB_USER
          value: onlyoffice
        image: docker.io/onlyoffice/documentserver
        imagePullPolicy: ""
        name: onlyoffice-documentserver
        ports:
        - containerPort: 80
        - containerPort: 443
        resources: {}
        stdin: true
        volumeMounts:
        - mountPath: /var/www/onlyoffice/Data
          name: onlyoffice-documentserver-data
        - mountPath: /var/log/onlyoffice
          name: onlyoffice-documentserver-data
        - mountPath: /var/lib/onlyoffice/documentserver/App_Data/cache/files
          name: onlyoffice-documentserver-data
        - mountPath: /var/www/onlyoffice/documentserver-example/public/files
          name: onlyoffice-documentserver-data
        - mountPath: /usr/share/fonts
          name: onlyoffice-documentserver-data
        - mountPath: /app/onlyoffice/DocumentServer/data/certs
          name: onlyoffice-ssl
          readOnly: true  
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: onlyoffice-documentserver-data
        persistentVolumeClaim: 
          claimName: onlyoffice-documentserver-claim
      - name: onlyoffice-ssl
        secret:
          secretName: onlyoffice-ssl      
status: {}
